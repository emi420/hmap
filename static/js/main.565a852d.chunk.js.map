{"version":3,"sources":["app/lib/localStorageService.js","app/lib/createAxiosInterceptors.js","config/config.js","app/app/apis/index.js","app/app/sagas/index.js","app/models/layerType.js","app/app/reducers/index.js","app/app/store.js","app/serviceWorker.js","app/components/Map/MapLayers/MapLayers.js","app/components/LoginForm/styles.js","app/components/LoginForm/index.js","app/components/LoadingIndicator/index.js","app/app/selectors/index.js","app/app/actions/index.js","app/components/LayersMenu/index.js","app/lib/getServerErrorMessage.js","app/lib/filterLayers.js","app/containers/Cockpit/Cockpit.js","app/containers/App/App.js","index.js"],"names":["LocalStorageService","_service","getService","this","setToken","tokenObj","access","localStorage","setItem","refresh","getAccessToken","getItem","getRefreshToken","clearToken","removeItem","localStorageService","MAP_DEFAULT_CENTER","api","axios","create","baseURL","withCredentials","interceptors","request","use","config","token","headers","error","Promise","reject","response","originalRequest","status","_retry","post","then","res","data","defaults","common","createAxiosInterceptors","API","postAccountToken","email","password","logout","console","log","Cookies","get","getMe","getUserLayers","submitUserAuth","submitLogout","submitGetMe","submitGetUserLayers","actionWatcher","rootSaga","action","payload","call","isLoggedIn","put","type","takeEvery","all","LayerType","PUBLIC","Symbol","for","PRIVATE","ACTIVE_FIRES","BIG_FIRES","Set","Object","freeze","getPersistedVisibleLayers","persistedState","JSON","parse","map","persistVisibleLayers","visibleLayers","stringify","keyFor","deletePeristedVisibleLayers","getInitialState","VisibleLayerTypes","state","UserAuthData","GetMeData","UserLayersData","layerType","has","delete","add","sagaMiddleware","createSagaMiddleware","configureStore","store","createStore","reducers","applyMiddleware","run","Boolean","window","location","hostname","match","MapLayers","props","layers","layer","hiddenLayers","indexOf","id","push","name","key","symbolLayout","symbolPaint","linePaint","circlePaint","fillPaint","circleOnClick","e","lngLat","styles","container","display","position","top","left","transform","alignItems","justifyContent","outline","form","background","width","borderRadius","padding","boxShadow","inputs","flexDirection","gap","LoginForm","open","setOpen","onSubmit","Modal","disableEnforceFocus","onClose","Box","sx","preventDefault","target","value","style","TextField","focused","label","required","Button","index","Backdrop","color","zIndex","theme","CircularProgress","DEFAULT_VISIBLE_LAYERS","getUserAuthData","createSelector","result","getMeData","getUserLayersData","getVisibleLayerTypesData","GetMeAction","LogOutAction","GetUserLayersAction","Menu","VisibleLayerTypesData","ToggleLayerTypeVisibilityAction","createLayerTypeSwitch","FormControlLabel","control","Switch","checked","onChange","Card","minWidth","xs","sm","Toolbar","variant","Typography","component","CardContent","FormGroup","connect","dispatch","ToggleLayerTypeVisibility","isMenuVisible","setIsMenuVisible","useTheme","displayModal","useMediaQuery","breakpoints","up","menu","showErrorMessage","detail","values","layerTypeFilter","is_public","includes","MainMap","ReactMapboxGl","accessToken","SubmitUserAuthAction","withRouter","useState","center","userLayers","setUserLayers","loginPopup","setLoginPopup","loading","setLoading","setError","allLayers","useEffect","getServerErrorMessage","layerTypes","filters","filter","some","filterLayers","layerData","geojson_data","containerStyle","height","antialias","right","onClick","Snackbar","autoHideDuration","Alert","severity","LoadingIndicator","App","className","path","Cockpit","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.565a852d.chunk.js","sourcesContent":["const LocalStorageService = (function () {\n    var _service;\n    function _getService() {\n        if (!_service) {\n            _service = this;\n            return _service\n        }\n        return _service\n    }\n    function _setToken(tokenObj) {\n        tokenObj.access && localStorage.setItem('access_token', tokenObj.access);\n        tokenObj.refresh && localStorage.setItem('refresh_token', tokenObj.refresh);\n    }\n    function _getAccessToken() {\n        return localStorage.getItem('access_token');\n    }\n    function _getRefreshToken() {\n        return localStorage.getItem('refresh_token');\n    }\n    function _clearToken() {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n    }\n    return {\n        getService: _getService,\n        setToken: _setToken,\n        getAccessToken: _getAccessToken,\n        getRefreshToken: _getRefreshToken,\n        clearToken: _clearToken\n    }\n})();\nexport default LocalStorageService;","import LocalStorageService from \"./localStorageService\";\nconst localStorageService = LocalStorageService.getService();\nexport default (api) => {\n    // Add a request interceptor\n    api.interceptors.request.use(\n        config => {\n            const token = localStorageService.getAccessToken();\n            if (token) {\n                config.headers['Authorization'] = 'Bearer ' + token;\n            }\n            // config.headers['Content-Type'] = 'application/json';\n            return config;\n        },\n        error => {\n            Promise.reject(error)\n        });\n    api.interceptors.response.use((response) => {\n        return response\n    },\n        function (error) {\n            const originalRequest = error.config;\n            if (error.response.status === 403 && !originalRequest._retry) {\n                const refreshToken = localStorageService.getRefreshToken();\n                if (!refreshToken) {\n                    // Re-throw the original error if we have no refresh token.\n                    throw error;\n                }\n\n                originalRequest._retry = true;\n                return api.post(`v1/token/refresh/`,\n                    {\n                        \"refresh\": localStorageService.getRefreshToken()\n                    })\n                    .then(res => {\n                        if (res.status === 200) {\n                            // 1) put token to LocalStorage\n                            localStorageService.setToken(res.data);\n\n                            // 2) Change Authorization header\n                            api.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();\n\n                            // 3) return originalRequest object with Axios.\n                            return api(originalRequest);\n                        }\n                    });\n            }\n\n            // return Error object with Promise\n            return Promise.reject(error);\n        });\n}","export const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiZW1pNDIwIiwiYSI6ImNqZW9leG5pZTAxYWwyeG83bHU0eHM0ZXcifQ.YWmk4Rp8FBGCLmpx_huJYw';\nexport const MAPBOX_DEFAULT_STYLE = 'mapbox://styles/mapbox/satellite-streets-v9';\nexport const MAP_DEFAULT_CENTER = [-64.273833, -31.006031]\nexport const API_BASE_URL = `https://api.hmap.forodeincendiosforestales.org/api`;\n\n","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport LocalStorageService from \"../../lib/localStorageService\";\nimport createAxiosInterceptors from \"../../lib/createAxiosInterceptors\";\n\nimport {\n    API_BASE_URL,\n} from '../../../config/config';\n\nconst localStorageService = LocalStorageService.getService();\n\nconst api = axios.create({ baseURL: API_BASE_URL, withCredentials: true });\n// Related to #37: handle auto JWT access and refresh token headers\n// (include headers and try to refresh it when we get 403)\n// Approach based on https://medium.com/swlh/handling-access-and-refresh-tokens-using-axios-interceptors-3970b601a5da\ncreateAxiosInterceptors(api);\n\nconst API = {\n    postAccountToken: function (email, password) {\n        return api.post(`v1/token/`, {\n            email,\n            password\n        })\n    },\n    logout: function () {\n        console.log(Cookies.get());\n        // TODO: implement logout / token blacklist\n        // server side. See https://medium.com/django-rest/logout-django-rest-framework-eb1b53ac6d35\n        localStorageService.clearToken();\n        // return api.post(`v1/accounts/logout/`)\n    },\n    getMe: function () {\n        return api.get(`v1/accounts/me/`);\n    },\n    getUserLayers: function () {\n        return api.get(`v1/layers/`);\n    }\n};\n\nexport default API;\n","import { takeEvery, put, call, all } from 'redux-saga/effects';\nimport API from '../apis';\nimport LocalStorageService from \"../../lib/localStorageService\";\nconst localStorageService = LocalStorageService.getService();\n\nfunction* submitUserAuth(action) {\n    const { email, password } = action.payload;\n    let payload = {}\n    try {\n        payload = yield call(API.postAccountToken, email, password);\n        localStorageService.setToken(payload.data);\n        payload.isLoggedIn = true;\n    } catch (error) {\n        payload = { error };\n    }\n\n    return yield put(\n        {\n            type: 'SUBMIT_USER_AUTH_SUCCESS',\n            payload\n        },\n    );\n}\n\nfunction* submitLogout() {\n    let payload = { isLoggedIn: false }\n    try {\n        (yield call(API.logout));\n    } catch (error) {\n        payload = { error };\n    }\n\n    return yield put(\n        {\n            type: 'SUBMIT_LOGOUT_SUCCESS',\n            payload\n        },\n    );\n}\n\nfunction* submitGetMe() {\n    let payload = {}\n    try {\n        payload = (yield call(API.getMe)).data;\n    } catch (error) {\n        payload = { error };\n    }\n\n    return yield put(\n        {\n            type: 'SUBMIT_GET_ME_SUCCESS',\n            payload\n        },\n    );\n}\n\nfunction* submitGetUserLayers() {\n    let payload = {}\n    try {\n        payload = (yield call(API.getUserLayers)).data;\n    } catch (error) {\n        payload = { error };\n    }\n\n    return yield put(\n        {\n            type: 'SUBMIT_GET_USER_LAYERS_SUCCESS',\n            payload\n        },\n    );\n}\n\nfunction* actionWatcher() {\n    yield takeEvery('SUBMIT_USER_AUTH_EVENT', submitUserAuth)\n    yield takeEvery('SUBMIT_GET_ME_EVENT', submitGetMe)\n    yield takeEvery('SUBMIT_LOGOUT_EVENT', submitLogout)\n    yield takeEvery('GET_USER_LAYERS_EVENT', submitGetUserLayers)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        actionWatcher(),\n    ]);\n}\n","const LayerType = {\n    PUBLIC: Symbol.for('LayerType.PUBLIC'),\n    PRIVATE: Symbol.for('LayerType.PRIVATE'),\n    ACTIVE_FIRES: Symbol.for('LayerType.ACTIVE_FIRES'),\n    BIG_FIRES: Symbol.for('LayerType.BIG_FIRES')\n  };\n\nLayerType.all = () => new Set([LayerType.PUBLIC, LayerType.PRIVATE, LayerType.ACTIVE_FIRES, LayerType.BIG_FIRES]);\n\nexport default Object.freeze(LayerType);\n  ","import LayerType from '../../models/layerType';\n\nconst VISIBLE_LAYERS_KEY = 'VISIBLE_LAYERS_KEY';\n\nconst getPersistedVisibleLayers = () => {\n  const persistedState = localStorage.getItem(VISIBLE_LAYERS_KEY);\n  return persistedState ? new Set(JSON.parse(persistedState).map(Symbol.for)) : LayerType.all();\n};\n\nconst persistVisibleLayers = (visibleLayers) => \n  localStorage.setItem(VISIBLE_LAYERS_KEY, visibleLayers && JSON.stringify([...visibleLayers].map(Symbol.keyFor)));\n\n\nconst deletePeristedVisibleLayers = () => localStorage.removeItem(VISIBLE_LAYERS_KEY);\n\nconst getInitialState =  () => ({\n  VisibleLayerTypes: getPersistedVisibleLayers()\n});\n\nexport default (state=getInitialState(), action) => {\n  \n  switch (action.type) {\n    case \"SUBMIT_USER_AUTH_SUCCESS\":\n      return {\n        ...state,\n        UserAuthData: action.payload\n      };\n    case \"SUBMIT_GET_ME_SUCCESS\":\n        return {\n          ...state,\n          GetMeData: action.payload\n        };\n    case \"SUBMIT_LOGOUT_SUCCESS\":\n        if(action.payload.isLoggedIn === false) {\n          deletePeristedVisibleLayers();\n          return getInitialState();\n        }\n    case \"SUBMIT_GET_USER_LAYERS_SUCCESS\":\n      return {\n        ...state,\n        UserLayersData: action.payload\n      };\n    case \"TOGGLE_LAYER_TYPE_VISIBILITY\":\n      const {layerType} = action.payload;\n      const visibleLayers = new Set(state.VisibleLayerTypes);\n      visibleLayers.has(layerType) ? visibleLayers.delete(layerType) : visibleLayers.add(layerType);\n      persistVisibleLayers(visibleLayers);\n      return {\n        ...state,\n        VisibleLayerTypes: visibleLayers\n      }\n    default:\n    return state;\n  }\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas';\nimport reducers from \"./reducers\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\nfunction configureStore() {\n  const store = createStore(\n    reducers,\n    applyMiddleware(sagaMiddleware)\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { GeoJSONLayer } from 'react-mapbox-gl';\n\nconst MapLayers = (props) => {\n    let layers = [];\n    props.layers.map(layer => {\n        if (props.hiddenLayers.indexOf(layer.id) === -1) {\n            if (layer.data) {\n                layers.push(<GeoJSONLayer\n                    id={layer.id}\n                    name={layer.id}\n                    key={layer.id}\n                    data={layer.data || null}\n                    symbolLayout={layer.symbolLayout}\n                    symbolPaint={layer.symbolPaint}\n                    linePaint={layer.linePaint}\n                    circlePaint={layer.circlePaint}\n                    fillPaint={layer.fillPaint}\n                    circleOnClick={(e) => {\n                        console.log(e.lngLat)\n                    }}\n                />)\n            } else {\n                layers.push(layer.layer);\n            }\n        }\n    })\n    return layers;\n};\n\nexport default MapLayers;","const styles = {\n    container:{\n        display:\"flex\",\n        position: \"absolute\",\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        outline: 'none'\n    },\n    form: {\n        container: {\n            background:\"white\",\n            width: \"400px\",\n            borderRadius:\"8px\",\n            padding: \"20px\",\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, .2), 0 8px 16px rgba(0, 0, 0, .2)\",\n        },\n        inputs: {\n            display:\"flex\",\n            flexDirection: \"column\",\n            gap: \"10px\",\n        }\n    },\n\n}\n\nexport default styles;","\nimport React from \"react\";\nimport styles from './styles';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst LoginForm = (props) => {\n    const { open, setOpen } = props;\n    const handleClose = () => setOpen(false);\n    const { onSubmit } = props;\n    return (\n        <Modal\n            // Known issue TODO: the email field focused is not working as expected within the modal parent. \n            // Spent like 15m on it but couldn't find a proper workaround it.\n            // disableAutoFocus\n            disableEnforceFocus\n            open={open}\n            onClose={handleClose}\n        >\n            <Box sx={styles.container}>\n\n                <form onSubmit={(e) => { \n                        e.preventDefault(); \n                        onSubmit(e.target.email.value, e.target.password.value); \n                    }} \n                    style={styles.form.container}>\n                    <div style={{...styles.form.inputs}}>\n                        <TextField focused label=\"Email\" id=\"email\" name=\"email\" required />   \n                        <TextField label=\"Password\" type=\"password\" id=\"password\" name=\"password\"  required />\n                        <Button type=\"submit\">Login</Button>\n                    </div>\n                </form>\n            </Box>\n        </Modal>);\n}\n\nexport default LoginForm;","import React from 'react'\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nfunction index() {\n    return (<Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => 9999 }}\n        open={true}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>);\n}\n\nexport default index\n","import { createSelector } from 'reselect';\nimport LayerType from '../../models/layerType';\n\nconst DEFAULT_VISIBLE_LAYERS = LayerType.all();\n\nconst getUserAuthDataFromState = state => state ? state.UserAuthData : {};\nconst getGetMeDataFromState = state => state ? state.GetMeData : {};\nconst getUserLayers = state => state ? state.UserLayersData : [];\nconst getVisibleLayerTypes = state => state ? state.VisibleLayerTypes : DEFAULT_VISIBLE_LAYERS;\n\nexport const getUserAuthData = createSelector(\n    [getUserAuthDataFromState],\n    result => result || {}\n)\n\nexport const getMeData = createSelector(\n    [getGetMeDataFromState],\n    result => result || {}\n)\n\nexport const getUserLayersData = createSelector(\n    [getUserLayers],\n    result => result || []\n)\n\nexport const getVisibleLayerTypesData = createSelector(\n    [getVisibleLayerTypes],\n    result => result || new Set()\n)\n\n","\nexport const SubmitUserAuthAction = (email, password) => ({\n  type: \"SUBMIT_USER_AUTH_EVENT\",\n  payload: {email, password}\n});\n\nexport const GetMeAction = {\n  type: \"SUBMIT_GET_ME_EVENT\",\n  payload: {}\n};\n\nexport const LogOutAction = {\n  type: \"SUBMIT_LOGOUT_EVENT\",\n  payload: {}\n};\n\nexport const GetUserLayersAction = {\n  type: \"GET_USER_LAYERS_EVENT\",\n  payload: {}\n};\n\nexport const ToggleLayerTypeVisibility = (layerType) => ({\n  type: \"TOGGLE_LAYER_TYPE_VISIBILITY\",\n  payload: {layerType}\n});\n","import React from 'react'\nimport { connect } from \"react-redux\";\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\n// import CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Modal from '@mui/material/Modal';\nimport Switch from '@mui/material/Switch';\nimport LayerType from '../../models/layerType';\nimport {\n    getVisibleLayerTypesData\n  } from \"../../app/selectors\";\nimport {\nToggleLayerTypeVisibility\n} from \"../../app/actions\";\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n\n\nfunction Menu(props) {\n    const {VisibleLayerTypesData, ToggleLayerTypeVisibilityAction} = props;\n    const createLayerTypeSwitch = (layerType, label) => <FormControlLabel control={<Switch checked={VisibleLayerTypesData.has(layerType)} onChange={() => ToggleLayerTypeVisibilityAction(layerType)} />} label={label} />\n\n    return (\n        <Card sx={{ minWidth:275, position: \"absolute\", top: {xs:\"50%\", sm:\"10%\"}, left: {xs:\"50%\", sm:\"5%\"}, transform:{xs:'translate(-50%, -50%)', sm: 'translate(0%, 0%)'} }} >\n                      <Toolbar style={{ background: '#1A76D2' }} variant=\"dense\">\n          {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" color=\"inherit\" component=\"div\" color=\"common.white\">\n            Humanitarian Map\n          </Typography>\n        </Toolbar>\n            <CardContent>\n  \n                <FormGroup>\n                    {createLayerTypeSwitch(LayerType.PUBLIC, \"Public Layers\")}\n                    {createLayerTypeSwitch(LayerType.PRIVATE, \"Private Layers\")}\n                    {createLayerTypeSwitch(LayerType.ACTIVE_FIRES, \"Fire Points\")}\n                    {createLayerTypeSwitch(LayerType.BIG_FIRES, \"Big Fires – Historical Data\")}\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst LayersMenu = (props) => {\n    const {isMenuVisible, setIsMenuVisible} = props;\n    const theme = useTheme();\n    const bigScreen = useMediaQuery(theme.breakpoints.up('sm'));\n    const displayModal = !bigScreen;\n    const menu = <Menu {...props}></Menu>;\n    console.log(displayModal);\n    return   displayModal ?  <Modal open={isMenuVisible} onClose={() => setIsMenuVisible(false)}><div>{menu}</div></Modal> : menu;\n}\n\nconst mapStateToProps = (state) => ({\n    VisibleLayerTypesData: getVisibleLayerTypesData(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    ToggleLayerTypeVisibilityAction: (layerType) => dispatch(ToggleLayerTypeVisibility(layerType)),\n    \n  });\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LayersMenu);\n  \n","\n\nconst showErrorMessage = (error) => error.response ? error.response.data.detail || error.response.detail || Object.values(error.response.data)[0] : \"Ups, we are having troubles connecting to the server. Please, try again later.\";\n\n\nexport default showErrorMessage\n\n","import LayerType from '../models/layerType';\n\nconst layerTypeFilter = {\n    [LayerType.PUBLIC]:(layer) => layer.is_public,\n    [LayerType.PRIVATE]:(layer) => !layer.is_public,\n    [LayerType.ACTIVE_FIRES]:(layer) => [\"Firms Viirs\", \"Firms Modis\"].includes(layer.name),\n    [LayerType.BIG_FIRES]:(layer) => layer.name === \"bigfires\",\n};\n\nexport default (layers, layerTypes) => {\n    console.log(layers, layerTypes);\n    const filters = [...layerTypes].map(type => layerTypeFilter[type]);\n    return layers.filter(layer => filters.map(filter => filter(layer)).some(result => result));\n}","import React, { useState, useEffect } from \"react\";\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport { connect } from \"react-redux\";\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport MapLayers from \"../../components/Map/MapLayers/MapLayers\";\nimport LoginForm from \"../../components/LoginForm\";\nimport LoadingIndicator from \"../../components/LoadingIndicator\";\nimport LayersMenu from \"../../components/LayersMenu\";\nimport {\n  MAP_DEFAULT_CENTER,\n  MAPBOX_ACCESS_TOKEN,\n  MAPBOX_DEFAULT_STYLE,\n} from \"../../../config/config\";\nimport {\n  SubmitUserAuthAction,\n  GetMeAction,\n  LogOutAction,\n  GetUserLayersAction,\n} from \"../../app/actions\";\nimport {\n  getUserAuthData,\n  getMeData,\n  getUserLayersData,\n  getVisibleLayerTypesData\n} from \"../../app/selectors\";\nimport { withRouter } from \"react-router-dom\";\nimport getServerErrorMessage from \"../../lib/getServerErrorMessage\";\nimport filterLayers from \"../../lib/filterLayers\";\n\nconst MainMap = ReactMapboxGl({\n  accessToken: MAPBOX_ACCESS_TOKEN,\n});\n\nconst Cockpit = (props) => {\n  const [center] = useState(MAP_DEFAULT_CENTER);\n  const [userLayers, setUserLayers] = useState([]);\n  const [loginPopup, setLoginPopup] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n\n  const allLayers = [...userLayers];\n\n  useEffect(() => {\n    props.GetMeAction();\n    props.GetUserLayersAction();\n  }, []);\n\n  useEffect(() => {\n    if (props.UserAuthData.error) {\n      setError(getServerErrorMessage(props.UserAuthData.error));\n      setLoading(false);\n    } else {\n      props.GetMeAction();\n    }\n  }, [props.UserAuthData]);\n\n  useEffect(() => {\n    if (props.GetMeData.email) {\n      setLoginPopup(false);\n      setLoading(false);\n      props.GetUserLayersAction();\n    } else {\n      setUserLayers([]);\n    }\n  }, [props.GetMeData.email]);\n\n  useEffect(() => {\n    if(props.UserLayersData.error) {\n      return;\n    }\n    setUserLayers(filterLayers(props.UserLayersData, props.VisibleLayerTypesData).map(layerData => ({...layerData, ...layerData.styles, id: JSON.stringify(layerData.id), data: layerData.geojson_data,   })));\n  }, [props.UserLayersData, props.VisibleLayerTypesData]);\n\n  \n  return (\n      <div>\n        <MainMap\n          style={MAPBOX_DEFAULT_STYLE}\n          center={center}\n          containerStyle={{\n            height: \"100vh\",\n            width: \"100vw\",\n          }}\n          antialias={true}\n        >\n          <MapLayers\n            layers={allLayers}\n            hiddenLayers={[]}\n          />\n\n        </MainMap>\n        <div style={{ position: \"absolute\", top: \"15px\", right: \"15px\" }}>\n            {!props.GetMeData.email ? <Button onClick={() => setLoginPopup(!loginPopup)} variant=\"contained\">Login</Button> : <Button onClick={props.LogOutAction} variant=\"contained\">Logout</Button>}\n        </div>\n\n        <Box display={{ xs: isMenuVisible ? \"block\" : \"none\", sm:\"block\" }}>\n          <LayersMenu isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible}/>\n        </Box>\n        {error && <Snackbar open={error} autoHideDuration={6000} onClose={() => setError(null)}>\n          <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n          </Alert>\n        </Snackbar>}\n        {loginPopup && !props.UserAuthData.isLoggedIn && <LoginForm open={loginPopup} setOpen={setLoginPopup} onSubmit={(email, password) => {\n          setLoading(true);\n          props.SubmitUserAuthAction(email, password);\n        }}/>}\n        {loading && <LoadingIndicator/>}\n      </div>\n\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n  UserAuthData: getUserAuthData(state),\n  GetMeData: getMeData(state),\n  UserLayersData: getUserLayersData(state),\n  VisibleLayerTypesData: getVisibleLayerTypesData(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  SubmitUserAuthAction: (email, password) => dispatch(SubmitUserAuthAction(email, password)),\n  GetMeAction: () => dispatch(GetMeAction),\n  LogOutAction: () => dispatch(LogOutAction),\n  GetUserLayersAction: () => dispatch(GetUserLayersAction),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Cockpit));\n","import React from 'react';\nimport Cockpit from '../Cockpit/Cockpit';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"\" component={Cockpit}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport configureStore from './app/app/store';\nimport * as serviceWorker from './app/serviceWorker';\nimport App from './app/containers/App/App';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}